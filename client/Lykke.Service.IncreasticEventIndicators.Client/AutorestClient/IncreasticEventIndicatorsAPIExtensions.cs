// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.IncreasticEventIndicators.Client.AutorestClient
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for IncreasticEventIndicatorsAPI.
    /// </summary>
    public static partial class IncreasticEventIndicatorsAPIExtensions
    {
            /// <summary>
            /// Adds delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='column'>
            /// Delta to add.
            /// </param>
            public static ErrorResponse ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaPut(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsColumnPost column = default(IntrinsicEventIndicatorsColumnPost))
            {
                return operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaPutAsync(column).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Adds delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='column'>
            /// Delta to add.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ErrorResponse> ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaPutAsync(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsColumnPost column = default(IntrinsicEventIndicatorsColumnPost), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaPutWithHttpMessagesAsync(column, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='columnId'>
            /// delta
            /// </param>
            public static void ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaDelete(this IIncreasticEventIndicatorsAPI operations, string columnId = default(string))
            {
                operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaDeleteAsync(columnId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='columnId'>
            /// delta
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaDeleteAsync(this IIncreasticEventIndicatorsAPI operations, string columnId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaDeleteWithHttpMessagesAsync(columnId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Adds asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='row'>
            /// Asset pair to add.
            /// </param>
            public static ErrorResponse ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairPut(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsAssetPairPost row = default(IntrinsicEventIndicatorsAssetPairPost))
            {
                return operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairPutAsync(row).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Adds asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='row'>
            /// Asset pair to add.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ErrorResponse> ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairPutAsync(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsAssetPairPost row = default(IntrinsicEventIndicatorsAssetPairPost), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairPutWithHttpMessagesAsync(row, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='rowId'>
            /// asset pair
            /// </param>
            public static void ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairDelete(this IIncreasticEventIndicatorsAPI operations, string rowId = default(string))
            {
                operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairDeleteAsync(rowId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='rowId'>
            /// asset pair
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairDeleteAsync(this IIncreasticEventIndicatorsAPI operations, string rowId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairDeleteWithHttpMessagesAsync(rowId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets data.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IntrinsicEventIndicatorsDto ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdataGet(this IIncreasticEventIndicatorsAPI operations)
            {
                return operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdataGetAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets data.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IntrinsicEventIndicatorsDto> ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdataGetAsync(this IIncreasticEventIndicatorsAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsdataGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets runners states.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IDictionary<string, IList<RunnerStateDto>> ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesGet(this IIncreasticEventIndicatorsAPI operations)
            {
                return operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesGetAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets runners states.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IDictionary<string, IList<RunnerStateDto>>> ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesGetAsync(this IIncreasticEventIndicatorsAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1IntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Checks service is alive
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object IsAlive(this IIncreasticEventIndicatorsAPI operations)
            {
                return operations.IsAliveAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Checks service is alive
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> IsAliveAsync(this IIncreasticEventIndicatorsAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.IsAliveWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
