// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.IncreasticEventIndicators.Client.AutorestClient
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for IncreasticEventIndicatorsAPI.
    /// </summary>
    public static partial class IncreasticEventIndicatorsAPIExtensions
    {
            /// <summary>
            /// Adds delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='column'>
            /// Delta to add.
            /// </param>
            public static ErrorResponse ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaexternalPut(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsColumnPost column = default(IntrinsicEventIndicatorsColumnPost))
            {
                return operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaexternalPutAsync(column).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Adds delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='column'>
            /// Delta to add.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ErrorResponse> ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaexternalPutAsync(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsColumnPost column = default(IntrinsicEventIndicatorsColumnPost), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaexternalPutWithHttpMessagesAsync(column, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='columnId'>
            /// delta
            /// </param>
            public static void ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaexternalDelete(this IIncreasticEventIndicatorsAPI operations, string columnId = default(string))
            {
                operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaexternalDeleteAsync(columnId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='columnId'>
            /// delta
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaexternalDeleteAsync(this IIncreasticEventIndicatorsAPI operations, string columnId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaexternalDeleteWithHttpMessagesAsync(columnId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Adds asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='row'>
            /// Asset pair to add.
            /// </param>
            public static ErrorResponse ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairexternalPut(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsRowPost row = default(IntrinsicEventIndicatorsRowPost))
            {
                return operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairexternalPutAsync(row).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Adds asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='row'>
            /// Asset pair to add.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ErrorResponse> ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairexternalPutAsync(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsRowPost row = default(IntrinsicEventIndicatorsRowPost), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairexternalPutWithHttpMessagesAsync(row, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='rowId'>
            /// asset pair
            /// </param>
            public static void ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairexternalDelete(this IIncreasticEventIndicatorsAPI operations, string rowId = default(string))
            {
                operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairexternalDeleteAsync(rowId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='rowId'>
            /// asset pair
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairexternalDeleteAsync(this IIncreasticEventIndicatorsAPI operations, string rowId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairexternalDeleteWithHttpMessagesAsync(rowId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets data.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IntrinsicEventIndicatorsDto ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdataexternalGet(this IIncreasticEventIndicatorsAPI operations)
            {
                return operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdataexternalGetAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets data.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IntrinsicEventIndicatorsDto> ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdataexternalGetAsync(this IIncreasticEventIndicatorsAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsdataexternalGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets runners states.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IDictionary<string, IList<RunnerStateDto>> ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesexternalGet(this IIncreasticEventIndicatorsAPI operations)
            {
                return operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesexternalGetAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets runners states.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IDictionary<string, IList<RunnerStateDto>>> ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesexternalGetAsync(this IIncreasticEventIndicatorsAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ExternalIntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesexternalGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Checks service is alive
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object IsAlive(this IIncreasticEventIndicatorsAPI operations)
            {
                return operations.IsAliveAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Checks service is alive
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> IsAliveAsync(this IIncreasticEventIndicatorsAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.IsAliveWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Adds delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='column'>
            /// Delta to add.
            /// </param>
            public static ErrorResponse ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaPut(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsColumnPost column = default(IntrinsicEventIndicatorsColumnPost))
            {
                return operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaPutAsync(column).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Adds delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='column'>
            /// Delta to add.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ErrorResponse> ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaPutAsync(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsColumnPost column = default(IntrinsicEventIndicatorsColumnPost), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaPutWithHttpMessagesAsync(column, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='columnId'>
            /// delta
            /// </param>
            public static void ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaDelete(this IIncreasticEventIndicatorsAPI operations, string columnId = default(string))
            {
                operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaDeleteAsync(columnId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes delta.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='columnId'>
            /// delta
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaDeleteAsync(this IIncreasticEventIndicatorsAPI operations, string columnId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdeltaDeleteWithHttpMessagesAsync(columnId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Adds asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='row'>
            /// Asset pair to add.
            /// </param>
            public static ErrorResponse ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairPut(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsRowPost row = default(IntrinsicEventIndicatorsRowPost))
            {
                return operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairPutAsync(row).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Adds asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='row'>
            /// Asset pair to add.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ErrorResponse> ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairPutAsync(this IIncreasticEventIndicatorsAPI operations, IntrinsicEventIndicatorsRowPost row = default(IntrinsicEventIndicatorsRowPost), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairPutWithHttpMessagesAsync(row, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='rowId'>
            /// asset pair
            /// </param>
            public static void ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairDelete(this IIncreasticEventIndicatorsAPI operations, string rowId = default(string))
            {
                operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairDeleteAsync(rowId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes asset pair.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='rowId'>
            /// asset pair
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairDeleteAsync(this IIncreasticEventIndicatorsAPI operations, string rowId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsassetpairDeleteWithHttpMessagesAsync(rowId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets data.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IntrinsicEventIndicatorsDto ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdataGet(this IIncreasticEventIndicatorsAPI operations)
            {
                return operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdataGetAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets data.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IntrinsicEventIndicatorsDto> ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdataGetAsync(this IIncreasticEventIndicatorsAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsdataGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets runners states.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IDictionary<string, IList<RunnerStateDto>> ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesGet(this IIncreasticEventIndicatorsAPI operations)
            {
                return operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesGetAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets runners states.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IDictionary<string, IList<RunnerStateDto>>> ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesGetAsync(this IIncreasticEventIndicatorsAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1LykkeIntrinsicEventIndicatorsIntrinsiceventindicatorsrunnersstatesGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
